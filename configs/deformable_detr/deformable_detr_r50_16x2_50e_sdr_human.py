_base_ = [
    '../_base_/datasets/coco_detection.py', '../_base_/default_runtime.py'
]
model = dict(
    type='DeformableDETR',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=False),
        norm_eval=True,
        style='pytorch',
        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),
    neck=dict(
        type='ChannelMapper',
        in_channels=[512, 1024, 2048],
        kernel_size=1,
        out_channels=256,
        act_cfg=None,
        norm_cfg=dict(type='GN', num_groups=32),
        num_outs=4),
    bbox_head=dict(
        type='DeformableDETRHead',
        num_query=300,
        num_classes=214,
        in_channels=2048,
        sync_cls_avg_factor=True,
        as_two_stage=False,
        transformer=dict(
            type='DeformableDetrTransformer',
            encoder=dict(
                type='DetrTransformerEncoder',
                num_layers=6,
                transformerlayers=dict(
                    type='BaseTransformerLayer',
                    attn_cfgs=dict(
                        type='MultiScaleDeformableAttention', embed_dims=256),
                    feedforward_channels=1024,
                    ffn_dropout=0.1,
                    operation_order=('self_attn', 'norm', 'ffn', 'norm'))),
            decoder=dict(
                type='DeformableDetrTransformerDecoder',
                num_layers=6,
                return_intermediate=True,
                transformerlayers=dict(
                    type='DetrTransformerDecoderLayer',
                    attn_cfgs=[
                        dict(
                            type='MultiheadAttention',
                            embed_dims=256,
                            num_heads=8,
                            dropout=0.1),
                        dict(
                            type='MultiScaleDeformableAttention',
                            embed_dims=256)
                    ],
                    feedforward_channels=1024,
                    ffn_dropout=0.1,
                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',
                                     'ffn', 'norm')))),
        positional_encoding=dict(
            type='SinePositionalEncoding',
            num_feats=128,
            normalize=True,
            offset=-0.5),
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=2.0),
        loss_bbox=dict(type='L1Loss', loss_weight=5.0),
        loss_iou=dict(type='GIoULoss', loss_weight=2.0)),
    # training and testing settings
    train_cfg=dict(
        assigner=dict(
            type='HungarianAssigner',
            cls_cost=dict(type='FocalLossCost', weight=2.0),
            reg_cost=dict(type='BBoxL1Cost', weight=5.0, box_format='xywh'),
            iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0))),
    test_cfg=dict(max_per_img=100))

img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)

# optimizer
optimizer = dict(
    type='AdamW',
    lr=2e-4,
    weight_decay=0.0001,
    paramwise_cfg=dict(
        custom_keys={
            'backbone': dict(lr_mult=0.1),
            'sampling_offsets': dict(lr_mult=0.1),
            'reference_points': dict(lr_mult=0.1)
        }))
optimizer_config = dict(grad_clip=dict(max_norm=0.1, norm_type=2))

# learning policy
lr_config = dict(policy='step', step=[9, 10, 11])
runner = dict(type='EpochBasedRunner', max_epochs=12)

# 1. dataset settings
dataset_type = 'CocoDataset'
data_root = '/workspace/fast_data_2/data_zha/card_detection/sdr_human_prototype/'
classes = (
                "big",
                "old",
                "short",
                "small",
                "strong",
                "tall",
                "weak",
                "young",
                "bird",
                "butterfly",
                "cat",
                "chicken",
                "cow",
                "crab",
                "crocodile",
                "deer",
                "dog",
                "duck",
                "elephant",
                "fish",
                "frog",
                "horse",
                "lion",
                "monkey",
                "pig",
                "shell",
                "snake",
                "tiger",
                "comb",
                "shampoo",
                "shower",
                "soap",
                "tissue",
                "toilet",
                "toothbrush",
                "toothpaste",
                "towel",
                "alarmclock",
                "bed",
                "blanket",
                "curtain",
                "dresser",
                "lamp",
                "mirror",
                "pajamas",
                "pillow",
                "wardrobe",
                "arm",
                "chin",
                "ear",
                "elbow",
                "eye",
                "eyebrow",
                "foot",
                "hand",
                "knee",
                "mouth",
                "neck",
                "nose",
                "shoulder",
                "teeth",
                "tongue",
                "black",
                "blue",
                "brown",
                "gray",
                "green",
                "pink",
                "red",
                "white",
                "yellow",
                "belt",
                "cap",
                "ring",
                "shirt",
                "shoes",
                "shorts",
                "skirt",
                "socks",
                "umbrella",
                "watch",
                "friday",
                "monday",
                "saturday",
                "sunday",
                "thursday",
                "tuesday",
                "wednesday",
                "bread",
                "cake",
                "cookies",
                "doughnut",
                "eggs",
                "icecream",
                "milk",
                "noodles",
                "popcorn",
                "rice",
                "tofu",
                "water",
                "apple",
                "banana",
                "grape",
                "mango",
                "mangosteen",
                "orange",
                "papaya",
                "pineapple",
                "rambutan",
                "roseapple",
                "watermelon",
                "broom",
                "bucket",
                "chair",
                "clock",
                "door",
                "fan",
                "mop",
                "radio",
                "refrigerator",
                "table",
                "telephone",
                "television",
                "window",
                "blender",
                "bowl",
                "fork",
                "glass",
                "knife",
                "pan",
                "pitcher",
                "plate",
                "spoon",
                "april",
                "august",
                "december",
                "february",
                "january",
                "july",
                "june",
                "march",
                "may",
                "november",
                "october",
                "september",
                "cloud",
                "flower",
                "moon",
                "mountain",
                "rain",
                "rainbow",
                "river",
                "rock",
                "sand",
                "thunder",
                "eight",
                "five",
                "four",
                "nine",
                "one",
                "seven",
                "six",
                "ten",
                "three",
                "two",
                "chef",
                "doctor",
                "farmer",
                "merchant",
                "monk",
                "nurse",
                "policeman",
                "soldier",
                "teacher",
                "worker",
                "circle",
                "heptagon",
                "hexagon",
                "octagon",
                "oval",
                "pentagon",
                "rectangle",
                "triangle",
                "backpack",
                "book",
                "eraser",
                "glue",
                "notebook",
                "pen",
                "pencil",
                "ruler",
                "scissors",
                "airplane",
                "bicycle",
                "boat",
                "bus",
                "car",
                "helicopter",
                "motorcycle",
                "train",
                "truck",
                "tuktuk",
                "brushmyteeth",
                "dress",
                "drink",
                "eat",
                "rubbodydry",
                "sleep",
                "takeabath",
                "takeapee",
                "takeapoo",
                "washmyhair",
                "washmyhand",
                "person"
            )

data = dict(
    samples_per_gpu=16,
    workers_per_gpu=8,
    train=dict(
        type=dataset_type,
        # explicitly add your class names to the field `classes`
        classes=classes,
        ann_file=data_root + 'instances_train.json',
        img_prefix=data_root + 'RGBfd222655-7872-41fd-900c-89a31f829232/',
        ),
    val=dict(
        type=dataset_type,
        # explicitly add your class names to the field `classes`
        classes=classes,
        ann_file='/workspace/fast_data_2/data_zha/card_detection/cardBox/robot_card_test_coco-human.json',
        img_prefix='/workspace/fast_data_2/data_zha/card_detection/cardBox/',
        ),
    test=dict(
        type=dataset_type,
        # explicitly add your class names to the field `classes`
        classes=classes,
        ann_file='/workspace/fast_data_2/data_zha/card_detection/cardBox/robot_card_test_coco-human.json',
        img_prefix='/workspace/fast_data_2/data_zha/card_detection/cardBox/',
        ),
    )

# fp16 = dict(loss_scale=512.)
    
load_from = 'pretrained_models/deformable_detr_r50_16x2_50e_coco_20210419_220030-a12b9512.pth'
